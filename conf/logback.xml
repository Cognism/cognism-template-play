<configuration>

    <variable name="LOGDNA_ENABLED" value="${LOGDNA_ENABLED:-false}"/>
    <variable name="LOGDNA_LOG_LEVEL" value="${LOGDNA_LOG_LEVEL:-DEBUG}"/>
    <variable name="LOGDNA_INGEST_KEY" value="${LOGDNA_INGEST_KEY:-dc555855627931ee51e40743d99d7fec}"/>
    <variable name="LOGDNA_INGEST_URL" value="${LOGDNA_INGEST_URL:-https://logs.logdna.com/logs/ingest}"/>
    <variable name="LOGDNA_APP_NAME" value="${LOGDNA_APP_NAME:-cognism-template-play}"/>
    <variable name="LOGDNA_TAGS" value="${LOGDNA_TAGS:-backend,api,template-play,staging}"/>

    <conversionRule conversionWord="coloredLevel" converterClass="play.api.libs.logback.ColoredLevel"/>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>./logs/application.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover -->
            <fileNamePattern>./logs/application.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- or whenever the file size reaches 100MB -->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>

        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} %X{sourceThread} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="LogDnaHttp" class="net.zileo.logback.logdna.LogDnaAppender">
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} %X{sourceThread} - %msg%n</pattern>
        </encoder>
        <appName>${LOGDNA_APP_NAME}</appName>
        <ingestKey>${LOGDNA_INGEST_KEY}</ingestKey>
        <ingestUrl>${LOGDNA_INGEST_URL}</ingestUrl>
        <mdcFields></mdcFields>
        <mdcTypes></mdcTypes>
        <tags>${LOGDNA_TAGS}</tags>
    </appender>

    <appender name="LogDna" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="LogDnaHttp"/>
        <queueSize>500</queueSize>
        <discardingThreshold>50</discardingThreshold>
        <includeCallerData>false</includeCallerData>
        <neverBlock>true</neverBlock>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} %X{sourceThread} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="ASYNCSTDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="STDOUT"/>
    </appender>

    <appender name="ASYNCFILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE"/>
    </appender>

    <logger name="play" level="INFO"/>
    <logger name="application" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="ASYNCSTDOUT"/>
        <appender-ref ref="ASYNCFILE"/>
    </root>

    <if condition='property("LOGDNA_ENABLED").contains("false")'>
        <then>
            <root level="${LOGDNA_LOG_LEVEL}">
                <appender-ref ref="ASYNCSTDOUT"/>
                <appender-ref ref="ASYNCFILE"/>
            </root>
        </then>
    </if>

    <if condition='property("LOGDNA_ENABLED").contains("true")'>
        <then>
            <root level="${LOGDNA_LOG_LEVEL}">
                <appender-ref ref="LogDna"/>
            </root>
        </then>
    </if>

</configuration>